server:
  port: ${PORT:8080}

spring:
  application:
    name: api-gateway
  cloud:
    gateway:
      httpclient:
        connect-timeout: 10000
        response-timeout: 30s
        pool:
          max-connections: 200
          max-idle-time: 15s
      routes:
        - id: citas-service
          uri: ${CITAS_SERVICE_URL:citas-service.railway.internal:8083}
          predicates:
            - Path=/digital/hospital/appointments/**
          filters:
            - RewritePath=/digital/hospital/appointments/(?<segment>.*), /appointments/${segment}
            
        - id: doctor-service
          uri: ${DOCTOR_SERVICE_URL:doctor-service.railway.internal:8081}
          predicates:
            - Path=/digital/hospital/doctors/**
          filters:
            - RewritePath=/digital/hospital/doctors/(?<segment>.*), /doctors/${segment}

        - id: especialidad-service
          uri: ${ESPECIALIDAD_SERVICE_URL:especialidad-service.railway.internal:8084}
          predicates:
            - Path=/digital/hospital/specialties/**
          filters:
            - RewritePath=/digital/hospital/specialties/(?<segment>.*), /specialties/${segment}

        - id: paciente-service
          uri: ${PACIENTE_SERVICE_URL:paciente-service.railway.internal:8082}
          predicates:
            - Path=/digital/hospital/patients/**
          filters:
            - RewritePath=/digital/hospital/patients/(?<segment>.*), /patients/${segment}
            
      discovery:
        enabled: true
      globalcors:
        cors-configurations:
          '[/**]':
            allowedOrigins: "*"
            allowedHeaders: "*"
            allowedMethods: "*"
            allowCredentials: false
            maxAge: 3600

management:
  endpoints:
    web:
      exposure:
        include: health,info,gateway,metrics
  endpoint:
    health:
      show-details: always
    gateway:
      enabled: ${ROUTE_TABLES_ENABLED:true}
  metrics:
    enable:
      system.cpu: false
      process.cpu: false

eureka:
  client:
    service-url:
      defaultZone: ${EUREKA_URL:http://spring-cloud-eureka:8761/eureka} 
    registerWithEureka: true
    fetchRegistry: true
  instance:
    hostname: ${HOSTNAME:${spring.application.name}}
    prefer-ip-address: true
    instance-id: ${spring.application.name}:${server.port}

info:
  app:
    name: API Gateway
    description: Gateway para enrutar servicios v√≠a Eureka
    version: 1.0.0

logging:
  level:
    org.springframework.cloud.gateway: DEBUG
    reactor.netty.http.client: DEBUG
    reactor.netty.http.server: DEBUG
    org.springframework.cloud.netflix.eureka: DEBUG
    org.springframework.web: DEBUG