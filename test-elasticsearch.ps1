# Script de PowerShell para probar Hospital System con Elasticsearch

Write-Host "üè• Iniciando Hospital System con Elasticsearch..." -ForegroundColor Green

# Detener contenedores existentes
Write-Host "üõë Deteniendo contenedores existentes..." -ForegroundColor Yellow
docker-compose down

# Limpiar vol√∫menes (opcional)
Write-Host "üßπ Limpiando vol√∫menes..." -ForegroundColor Yellow
docker-compose down -v

# Construir y levantar servicios
Write-Host "üî® Construyendo servicios..." -ForegroundColor Yellow
docker-compose build

Write-Host "üöÄ Iniciando servicios..." -ForegroundColor Green
docker-compose up -d

# Esperar a que los servicios est√©n listos
Write-Host "‚è≥ Esperando a que los servicios est√©n listos..." -ForegroundColor Yellow
Start-Sleep -Seconds 30

# Verificar estado de los servicios
Write-Host "üîç Verificando estado de los servicios..." -ForegroundColor Cyan

# Verificar Eureka Server
Write-Host "üì° Verificando Eureka Server..." -ForegroundColor Yellow
try {
    $response = Invoke-WebRequest -Uri "http://localhost:8761/actuator/health" -UseBasicParsing
    Write-Host "‚úÖ Eureka Server est√° listo" -ForegroundColor Green
} catch {
    Write-Host "‚ùå Eureka Server no est√° listo" -ForegroundColor Red
}

# Verificar Doctor Service
Write-Host "üë®‚Äç‚öïÔ∏è Verificando Doctor Service..." -ForegroundColor Yellow
try {
    $response = Invoke-WebRequest -Uri "http://localhost:8081/actuator/health" -UseBasicParsing
    Write-Host "‚úÖ Doctor Service est√° listo" -ForegroundColor Green
} catch {
    Write-Host "‚ùå Doctor Service no est√° listo" -ForegroundColor Red
}

# Verificar Citas Service
Write-Host "üìÖ Verificando Citas Service..." -ForegroundColor Yellow
try {
    $response = Invoke-WebRequest -Uri "http://localhost:8083/actuator/health" -UseBasicParsing
    Write-Host "‚úÖ Citas Service est√° listo" -ForegroundColor Green
} catch {
    Write-Host "‚ùå Citas Service no est√° listo" -ForegroundColor Red
}

# Verificar API Gateway
Write-Host "üåê Verificando API Gateway..." -ForegroundColor Yellow
try {
    $response = Invoke-WebRequest -Uri "http://localhost:8080/actuator/health" -UseBasicParsing
    Write-Host "‚úÖ API Gateway est√° listo" -ForegroundColor Green
} catch {
    Write-Host "‚ùå API Gateway no est√° listo" -ForegroundColor Red
}

# Probar endpoints de Elasticsearch
Write-Host "üîç Probando endpoints de Elasticsearch..." -ForegroundColor Cyan

# Verificar Elasticsearch
Write-Host "üìä Verificando Elasticsearch..." -ForegroundColor Yellow
try {
    $response = Invoke-WebRequest -Uri "http://localhost:8081/doctors/search-index" -UseBasicParsing
    Write-Host "‚úÖ Elasticsearch est√° disponible" -ForegroundColor Green
} catch {
    Write-Host "‚ùå Elasticsearch no est√° disponible" -ForegroundColor Red
}

# Probar b√∫squeda avanzada
Write-Host "üîé Probando b√∫squeda avanzada..." -ForegroundColor Yellow
try {
    $response = Invoke-WebRequest -Uri "http://localhost:8081/doctors/search/advanced?query=cardio&page=0&size=5" -UseBasicParsing
    Write-Host "‚úÖ B√∫squeda avanzada funcionando" -ForegroundColor Green
} catch {
    Write-Host "‚ùå B√∫squeda avanzada fall√≥" -ForegroundColor Red
}

# Probar autocompletado
Write-Host "üí° Probando autocompletado..." -ForegroundColor Yellow
try {
    $response = Invoke-WebRequest -Uri "http://localhost:8081/doctors/search/autocomplete?prefix=car" -UseBasicParsing
    Write-Host "‚úÖ Autocompletado funcionando" -ForegroundColor Green
} catch {
    Write-Host "‚ùå Autocompletado fall√≥" -ForegroundColor Red
}

# Probar b√∫squeda por especialidad
Write-Host "üè• Probando b√∫squeda por especialidad..." -ForegroundColor Yellow
try {
    $response = Invoke-WebRequest -Uri "http://localhost:8081/doctors/search/specialty/Cardiolog√≠a" -UseBasicParsing
    Write-Host "‚úÖ B√∫squeda por especialidad funcionando" -ForegroundColor Green
} catch {
    Write-Host "‚ùå B√∫squeda por especialidad fall√≥" -ForegroundColor Red
}

# Sincronizar datos con Elasticsearch
Write-Host "üîÑ Sincronizando datos con Elasticsearch..." -ForegroundColor Yellow
try {
    $response = Invoke-WebRequest -Uri "http://localhost:8081/doctors/sync/elasticsearch" -Method POST -UseBasicParsing
    Write-Host "‚úÖ Sincronizaci√≥n exitosa" -ForegroundColor Green
} catch {
    Write-Host "‚ùå Sincronizaci√≥n fall√≥" -ForegroundColor Red
}

# Probar integraci√≥n Citas-Doctor
Write-Host "üîó Probando integraci√≥n Citas-Doctor..." -ForegroundColor Cyan

# Verificar salud del doctor service desde citas
Write-Host "üè• Verificando doctor service desde citas..." -ForegroundColor Yellow
try {
    $response = Invoke-WebRequest -Uri "http://localhost:8083/appointments/health/doctor-service" -UseBasicParsing
    Write-Host "‚úÖ Integraci√≥n Citas-Doctor funcionando" -ForegroundColor Green
} catch {
    Write-Host "‚ùå Integraci√≥n Citas-Doctor fall√≥" -ForegroundColor Red
}

# Probar obtenci√≥n de doctores desde citas
Write-Host "üë®‚Äç‚öïÔ∏è Probando obtenci√≥n de doctores desde citas..." -ForegroundColor Yellow
try {
    $response = Invoke-WebRequest -Uri "http://localhost:8083/appointments/doctors" -UseBasicParsing
    Write-Host "‚úÖ Obtenci√≥n de doctores desde citas funcionando" -ForegroundColor Green
} catch {
    Write-Host "‚ùå Obtenci√≥n de doctores desde citas fall√≥" -ForegroundColor Red
}

Write-Host ""
Write-Host "‚úÖ Pruebas completadas!" -ForegroundColor Green
Write-Host ""
Write-Host "üìä URLs de los servicios:" -ForegroundColor Cyan
Write-Host "   - Eureka Server: http://localhost:8761" -ForegroundColor White
Write-Host "   - API Gateway: http://localhost:8080" -ForegroundColor White
Write-Host "   - Doctor Service: http://localhost:8081" -ForegroundColor White
Write-Host "   - Citas Service: http://localhost:8083" -ForegroundColor White
Write-Host "   - Especialidad Service: http://localhost:8084" -ForegroundColor White
Write-Host "   - H2 Console: http://localhost:8082/console" -ForegroundColor White
Write-Host "   - Swagger UI Doctor: http://localhost:8081/swagger-ui.html" -ForegroundColor White
Write-Host "   - Swagger UI Citas: http://localhost:8083/swagger-ui.html" -ForegroundColor White
Write-Host ""
Write-Host "üîç Endpoints de Elasticsearch:" -ForegroundColor Cyan
Write-Host "   - B√∫squeda avanzada: http://localhost:8081/doctors/search/advanced" -ForegroundColor White
Write-Host "   - Autocompletado: http://localhost:8081/doctors/search/autocomplete?prefix=car" -ForegroundColor White
Write-Host "   - Sugerencias: http://localhost:8081/doctors/search/suggestions?query=cardio" -ForegroundColor White
Write-Host "   - Sincronizaci√≥n: POST http://localhost:8081/doctors/sync/elasticsearch" -ForegroundColor White
Write-Host ""
Write-Host "üîó Endpoints de Integraci√≥n Citas-Doctor:" -ForegroundColor Cyan
Write-Host "   - Doctores: http://localhost:8083/appointments/doctors" -ForegroundColor White
Write-Host "   - Doctor por ID: http://localhost:8083/appointments/doctors/{id}" -ForegroundColor White
Write-Host "   - Doctores por especialidad: http://localhost:8083/appointments/doctors/specialty/{specialty}" -ForegroundColor White
Write-Host "   - Doctores disponibles: http://localhost:8083/appointments/doctors/available" -ForegroundColor White
Write-Host "   - Validar doctor: http://localhost:8083/appointments/validate-doctor/{doctorId}" -ForegroundColor White
Write-Host ""
Write-Host "üìù Logs del Doctor Service:" -ForegroundColor Cyan
docker-compose logs doctor-service
Write-Host ""
Write-Host "üìù Logs del Citas Service:" -ForegroundColor Cyan
docker-compose logs citas-service
